'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Tabs;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ControlledTabs = function (_Component) {
  _inherits(ControlledTabs, _Component);

  function ControlledTabs(props) {
    _classCallCheck(this, ControlledTabs);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _this.setSelectedTabId = _this.setSelectedTabId.bind(_this);
    return _this;
  }

  ControlledTabs.prototype.setSelectedTabId = function setSelectedTabId(tabId) {
    var _props = this.props;
    var onTabChange = _props.onTabChange;
    var selectedTabId = _props.selectedTabId;

    onTabChange(tabId, selectedTabId);
  };

  ControlledTabs.prototype.getChildContext = function getChildContext() {
    return {
      selectedTabId: this.props.selectedTabId,
      setSelectedTabId: this.setSelectedTabId
    };
  };

  ControlledTabs.prototype.render = function render() {
    var _props2 = this.props;
    var children = _props2.children;
    var onTabChange = _props2.onTabChange;
    var selectedTabId = _props2.selectedTabId;

    var rest = _objectWithoutProperties(_props2, ['children', 'onTabChange', 'selectedTabId']);

    return _react2.default.createElement(
      'div',
      rest,
      children
    );
  };

  return ControlledTabs;
}(_react.Component);

ControlledTabs.propTypes = {
  children: _react.PropTypes.node,
  selectedTabId: _react.PropTypes.any.isRequired,
  onTabChange: _react.PropTypes.func.isRequired
};

ControlledTabs.childContextTypes = {
  selectedTabId: _react.PropTypes.any,
  setSelectedTabId: _react.PropTypes.func.isRequired
};

var UncontrolledTabs = function (_Component2) {
  _inherits(UncontrolledTabs, _Component2);

  function UncontrolledTabs(props) {
    _classCallCheck(this, UncontrolledTabs);

    var _this2 = _possibleConstructorReturn(this, _Component2.call(this, props));

    _this2.state = { selectedTabId: props.defaultTabId };
    _this2.handleTabChange = _this2.handleTabChange.bind(_this2);
    return _this2;
  }

  UncontrolledTabs.prototype.handleTabChange = function handleTabChange(selectedTabId, previousTabId) {
    var onTabChange = this.props.onTabChange;

    this.setState({ selectedTabId: selectedTabId });
    onTabChange && onTabChange(selectedTabId, previousTabId);
  };

  UncontrolledTabs.prototype.render = function render() {
    var _props3 = this.props;
    var children = _props3.children;
    var defaultTabId = _props3.defaultTabId;
    var onTabChange = _props3.onTabChange;

    var rest = _objectWithoutProperties(_props3, ['children', 'defaultTabId', 'onTabChange']);

    return _react2.default.createElement(
      ControlledTabs,
      _extends({
        selectedTabId: this.state.selectedTabId,
        onTabChange: this.handleTabChange
      }, rest),
      children
    );
  };

  return UncontrolledTabs;
}(_react.Component);

UncontrolledTabs.propTypes = {
  children: _react.PropTypes.node,
  defaultTabId: _react.PropTypes.any.isRequired,
  onTabChange: _react.PropTypes.func
};

function Tabs(props) {
  return props.selectedTabId == null ? _react2.default.createElement(UncontrolledTabs, props) : _react2.default.createElement(ControlledTabs, props);
}

Tabs.propTypes = {
  selectedTabId: _react.PropTypes.any
};
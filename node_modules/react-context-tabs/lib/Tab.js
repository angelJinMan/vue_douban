'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tab = function (_Component) {
  _inherits(Tab, _Component);

  function Tab(props, context) {
    _classCallCheck(this, Tab);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  Tab.prototype.handleClick = function handleClick(event) {
    var _context = this.context;
    var selectedTabId = _context.selectedTabId;
    var setSelectedTabId = _context.setSelectedTabId;
    var _props = this.props;
    var disabled = _props.disabled;
    var tabId = _props.tabId;

    if (!(selectedTabId === tabId) && !disabled) {
      setSelectedTabId(tabId);
    }
  };

  Tab.prototype.render = function render() {
    var _props2 = this.props;
    var children = _props2.children;
    var className = _props2.className;
    var disabled = _props2.disabled;
    var tabId = _props2.tabId;

    var rest = _objectWithoutProperties(_props2, ['children', 'className', 'disabled', 'tabId']);

    var selectedTabId = this.context.selectedTabId;


    return _react2.default.createElement(
      'li',
      _extends({
        className: (0, _classnames2.default)('Tab', className, {
          isSelected: selectedTabId === tabId,
          isDisabled: disabled
        }),
        onClick: this.handleClick
      }, rest),
      children
    );
  };

  return Tab;
}(_react.Component);

exports.default = Tab;


Tab.propTypes = {
  children: _react.PropTypes.node.isRequired,
  className: _react.PropTypes.string,
  disabled: _react.PropTypes.bool,
  tabId: _react.PropTypes.any.isRequired
};

Tab.contextTypes = {
  selectedTabId: _react.PropTypes.any,
  setSelectedTabId: _react.PropTypes.func.isRequired
};